
# replies to status commands should be prompt
LockTimeout  = 100;
ReplyTimeout = 100;

# eg.
# "state(0,0,0,DoubleGripper,HOME,,0,0,-1,-1,-1,-1,-1,-1,-32768,-32768,,0,0,25.0,0,0,0.5155593,75.0,72.0,1,0,0,System OK for operation,0,304.7,139.9,-94.4,0.0,-180.0,-47.5,21.5,-15.6,97.1,0.0,98.5,-23.5,,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,)"
state {
    out "state";
    in "state(%b"
       # 1
       ",%(\$1Rmt-Sts)b"
       ",%(\$1Flt-Sts)b"
       ",%(\$1Tl-I)[^,)]"
       ",%(\$1Pos:Name-I)[^,)]"
       ",%(\$1Path:Name-I)[^,)]"
       ",%(\$1Grp:A-Sts)b"
       ",%(\$1Grp:B-Sts)b"
       ",%(\$1Pck:A-I)d"
       ",%(\$1Samp:A-I)d"
       # 10
       ",%(\$1Pck:B-I)d"
       ",%(\$1Samp:B-I)d"
       ",%(\$1Pck:Dif-I)d"
       ",%(\$1Samp:Dif-I)d"
       ",%(\$1Plt:Tl-I)d"
       ",%(\$1Plt:Dif-I)d"
       ",%(\$1DM:Lst-I)[^,)]"
       ",%(\$1Seq:Run-Sts)b"
       ",%(\$1Seq:Paus-Sts)b"
       ",%(\$1Speed-I)f"
       # 20
       ",%(\$1LN2:Reg-Sts)b"
       ",%(\$1LN2:SoakPha-I)d"
       ",%(\$1LN2:Lvl-I)f"
       ",%(\$1LN2:Max-I)f"
       ",%(\$1LN2:Min-I)f"
       ",%(\$1CamTrk-Sts)b"
       ",%(\$1GripDry-Sts)b"
       ",%(\$1LN2:PS-Sts)b"
       ",%(\$1LastMsg-I)[^,)]"
       ",%(\$1Alarm-I)u"
       # 30
       ",%(\$1Pos:X-I)f"
       ",%(\$1Pos:Y-I)f"
       ",%(\$1Pos:Z-I)f"
       ",%(\$1Pos:RX-I)f"
       ",%(\$1Pos:RY-I)f"
       ",%(\$1Pos:RZ-I)f"
       ",%*[^)])"; # recognize one or more unused args.
       # "%*/\)|,[^)]*\)/"; # recognize zero or more unused args.  requires stream s/ PCRE support
}

# eg.
# "sampledata(0.0,0.0,9.0,8.0,0.0,24.98,0.0,14.19,52.11,13.13,79.46,1202,21,0,0,0,0,0,0,0,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,)"
sampledata {
    out "sampledata";
    in "sampledata(%f"
       # 1
       ",%(\$1PltTm-I)f"
       ",%(\$1PckN-I)f"
       ",%(\$1SampN-I)f"
       ",%(\$1PckT-I)f"
       ",%(\$1AirTm-I)f"
       ",%(\$1PPTm-I)f"
       ",%(\$1PutTm-I)f"
       ",%(\$1GnTm-I)f"
       ",%(\$1GetTm-I)f"
       # 10
       ",%(\$1SampTm-I)f"
       ",%(\$1Cnt:OK-I)d"
       ",%(\$1Cnt:Flt-I)d"
       ",%*d" # unused
       ",%*d"
       ",%*d"
       ",%*d"
       ",%*d"
       ",%*d"
       ",%*d"
       # 20
       ",%*[^,)]"
       ",%(\$1Pck1-I)[^,)]"
       ",%(\$1Pck2-I)[^,)]"
       ",%(\$1Pck3-I)[^,)]"
       ",%(\$1Pck4-I)[^,)]"
       ",%(\$1Pck5-I)[^,)]"
       ",%(\$1Pck6-I)[^,)]"
       ",%(\$1Pck7-I)[^,)]"
       ",%(\$1Pck8-I)[^,)]"
       ",%(\$1Pck9-I)[^,)]"
       ",%(\$1Pck10-I)[^,)]"
       ",%(\$1Pck11-I)[^,)]"
       ",%(\$1Pck12-I)[^,)]"
       ",%(\$1Pck13-I)[^,)]"
       ",%(\$1Pck14-I)[^,)]"
       ",%(\$1Pck15-I)[^,)]"
       ",%(\$1Pck16-I)[^,)]"
       ",%(\$1Pck17-I)[^,)]"
       ",%(\$1Pck18-I)[^,)]"
       ",%(\$1Pck19-I)[^,)]"
       ",%(\$1Pck20-I)[^,)]"
       ",%(\$1Pck21-I)[^,)]"
       ",%(\$1Pck22-I)[^,)]"
       ",%(\$1Pck23-I)[^,)]"
       ",%(\$1Pck24-I)[^,)]"
       ",%(\$1Pck25-I)[^,)]"
       ",%(\$1Pck26-I)[^,)]"
       ",%(\$1Pck27-I)[^,)]"
       ",%(\$1Pck28-I)[^,)]"
       ",%(\$1Pck29-I)[^,)]"
       "%*[^)])"; # try to ignore ',' and extra args
       # ",%*[^)])"; # recognize one or more unused args.
       # "%*/\)|,[^)]*\)/"; # recognize zero or more unused args.  requires stream s/ PCRE support
}

# for "di" and "do"
bits {
    separator = ",";
    out "\$1";
    in "\$1(%b)";
}

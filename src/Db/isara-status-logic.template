# ISARA sample auto-mounting robot arm
# Status socket
#
# Macros
#  P    - Record name prefix
#  DEV  - asyn port name of status socket
#  SCAN - status scan rate

# Status chain

record(ai, "$(P)Scn:Strt-I_") {
    field(DTYP, "Soft Timestamp") # OS time at start of scan
    field(SCAN, "$(SCAN)")
    field(FLNK, "$(P)Pwr-Sts")
}

record(bi, "$(P)Pwr-Sts") {
    field(DTYP, "stream")
    field(INP , "@isara-status.proto state($(P)) $(DEV)")
    field(ZNAM, "Off")
    field(ONAM, "On")
    field(FLNK, "$(P)DI-I_")
}
record(bi, "$(P)Rmt-Sts") {
    field(ZNAM, "Local")
    field(ONAM, "Remote")
}
record(bi, "$(P)Flt-Sts") {
    field(ZNAM, "0")
    field(ONAM, "1")
}
record(mbbo, "$(P)Tool-I") {
    field(ZRST, "ToolChanger")
    field(ONST, "Cryotong")
    field(TWST, "SingleGripper")
    field(THST, "DoubleGripper")
    field(FRST, "MiniSpineGripper")
    field(FVST, "RotatingGripper")
    field(SXST, "PlateGripper")
    field(SVST, "Spare")
    field(EIST, "LaserTool")
    field(ZRVL, "0")
    field(ONVL, "1")
    field(TWVL, "2")
    field(THVL, "3")
    field(FRVL, "4")
    field(FVVL, "5")
    field(SXVL, "6")
    field(SVVL, "7")
    field(EIVL, "8")
}
record(stringin, "$(P)Pos:Name-I") {}
record(stringin, "$(P)Path:Name-I") {}
record(bi, "$(P)Grp:A-Sts") {
    field(ZNAM, "0")
    field(ONAM, "1")
}
record(bi, "$(P)Grp:B-Sts") {
    field(ZNAM, "0")
    field(ONAM, "1")
}
record(longin, "$(P)Pck:A-I") {}
record(longin, "$(P)Samp:A-I") {}
record(longin, "$(P)Pck:B-I") {}
record(longin, "$(P)Samp:B-I") {}
record(longin, "$(P)Pck:Dif-I") {}
record(longin, "$(P)Samp:Dif-I") {}
record(longin, "$(P)Plt:Tl-I") {}
record(longin, "$(P)Plt:Dif-I") {}
record(stringin, "$(P)DM:Lst-I") {}
record(bi, "$(P)Seq:Run-Sts") {
    field(ZNAM, "Stop")
    field(ONAM, "Move")
}
record(bi, "$(P)Seq:Paus-Sts") {
    field(ZNAM, "Normal")
    field(ONAM, "Pause")
}
record(ai, "$(P)Speed-I") {
    field(PREC, "1")
    field(EGU, "%")
}
record(bi, "$(P)LN2:Reg-Sts") {
    field(ZNAM, "Off")
    field(ONAM, "On")
}
record(longin, "$(P)LN2:SoakPha-I") {}
record(ai, "$(P)LN2:Lvl-I") {
    field(PREC, "1")
    field(EGU, "%")
}
record(ai, "$(P)LN2:Max-I") {
    field(PREC, "1")
    field(EGU, "%")
}
record(ai, "$(P)LN2:Min-I") {
    field(PREC, "1")
    field(EGU, "%")
}
record(bi, "$(P)CamTrk-Sts") {
    field(ZNAM, "Idle")
    field(ONAM, "Track")
}
record(bi, "$(P)GripDry-Sts") {
    field(ZNAM, "Idle")
    field(ONAM, "Drying")
}
record(bi, "$(P)LN2:PS-Sts") {
    field(ZNAM, "Off")
    field(ONAM, "On")
}
record(stringin, "$(P)LastMsg-I") {}
record(mbbiDirect, "$(P)Alarm-I") {
    field(NOBT, "32")
}
record(ai, "$(P)Pos:X-I") {
    field(PREC, "1")
    field(EGU , "mm")
}
record(ai, "$(P)Pos:Y-I") {
    field(PREC, "1")
    field(EGU , "mm")
}
record(ai, "$(P)Pos:Z-I") {
    field(PREC, "1")
    field(EGU , "mm")
}
record(ai, "$(P)Pos:RX-I") {
    field(PREC, "1")
    field(EGU , "deg")
}
record(ai, "$(P)Pos:RY-I") {
    field(PREC, "1")
    field(EGU , "deg")
}
record(ai, "$(P)Pos:RZ-I") {
    field(PREC, "1")
    field(EGU , "deg")
}


record(aai, "$(P)DI-I_") {
    field(FTVL, "SHORT")
    field(NELM, "256") # currently 112 will be used
    field(DTYP, "stream")
    field(INP , "@isara-status.proto bits(di) $(DEV)")
    field(FLNK, "$(P)DI:Chop-I_")
}

record(aSub, "$(P)DI:Chop-I_") {
    field(SNAM, "isara_chop_bits")

    field(FTA , "SHORT")
    field(NOA, "256")
    field(INPA, "$(P)DI-I_ NPP MSI")

    field(FTVA, "ULONG")
    field(OUTA, "$(P)DI:0-I PP MSI")
    field(FTVB, "ULONG")
    field(OUTB, "$(P)DI:1-I PP MSI")
    field(FTVC, "ULONG")
    field(OUTC, "$(P)DI:2-I PP MSI")
    field(FTVD, "ULONG")
    field(OUTD, "$(P)DI:3-I PP MSI")

    field(FLNK, "$(P)DO-I_")
}

record(mbbiDirect, "$(P)DI:0-I") {
    field(NOBT, "32")
}
record(mbbiDirect, "$(P)DI:1-I") {
    field(NOBT, "32")
}
record(mbbiDirect, "$(P)DI:2-I") {
    field(NOBT, "32")
}
record(mbbiDirect, "$(P)DI:3-I") {
    field(NOBT, "32")
}

record(aai, "$(P)DO-I_") {
    field(FTVL, "SHORT")
    field(NELM, "256") # currently 112 will be used
    field(DTYP, "stream")
    field(INP , "@isara-status.proto bits(do) $(DEV)")
    field(FLNK, "$(P)DO:Chop-I_")
}

record(aSub, "$(P)DO:Chop-I_") {
    field(SNAM, "isara_chop_bits")

    field(FTA , "SHORT")
    field(NOA, "256")
    field(INPA, "$(P)DO-I_ NPP MSI")

    field(FTVA, "ULONG")
    field(OUTA, "$(P)DO:0-I PP MSI")
    field(FTVB, "ULONG")
    field(OUTB, "$(P)DO:1-I PP MSI")
    field(FTVC, "ULONG")
    field(OUTC, "$(P)DO:2-I PP MSI")
    field(FTVD, "ULONG")
    field(OUTD, "$(P)DO:3-I PP MSI")

    field(FLNK, "$(P)SD:PltN-I")
}

record(mbbiDirect, "$(P)DO:0-I") {
    field(NOBT, "32")
}
record(mbbiDirect, "$(P)DO:1-I") {
    field(NOBT, "32")
}
record(mbbiDirect, "$(P)DO:2-I") {
    field(NOBT, "32")
}
record(mbbiDirect, "$(P)DO:3-I") {
    field(NOBT, "32")
}

record(ai, "$(P)SD:PltN-I") {
    field(DTYP, "stream")
    field(INP , "@isara-status.proto sampledata($(P)SD:) $(DEV)")
    field(FLNK, "$(P)Scn:End-I_")
}
record(ai, "$(P)SD:PltTm-I") {}
record(ai, "$(P)SD:PckN-I") {}
record(ai, "$(P)SD:SampN-I") {}
record(ai, "$(P)SD:PckT-I") {}
record(ai, "$(P)SD:AirTm-I") {}
record(ai, "$(P)SD:PPTm-I") {}
record(ai, "$(P)SD:PutTm-I") {}
record(ai, "$(P)SD:GnTm-I") {}
record(ai, "$(P)SD:GetTm-I") {}
record(ai, "$(P)SD:SampTm-I") {}
record(longin, "$(P)SD:Cnt:OK-I") {}
record(longin, "$(P)SD:Cnt:Flt-I") {}
record(stringin, "$(P)SD:Pck1-I") {}
record(stringin, "$(P)SD:Pck2-I") {}
record(stringin, "$(P)SD:Pck3-I") {}
record(stringin, "$(P)SD:Pck4-I") {}
record(stringin, "$(P)SD:Pck5-I") {}
record(stringin, "$(P)SD:Pck6-I") {}
record(stringin, "$(P)SD:Pck7-I") {}
record(stringin, "$(P)SD:Pck8-I") {}
record(stringin, "$(P)SD:Pck9-I") {}
record(stringin, "$(P)SD:Pck10-I") {}
record(stringin, "$(P)SD:Pck11-I") {}
record(stringin, "$(P)SD:Pck12-I") {}
record(stringin, "$(P)SD:Pck13-I") {}
record(stringin, "$(P)SD:Pck14-I") {}
record(stringin, "$(P)SD:Pck15-I") {}
record(stringin, "$(P)SD:Pck16-I") {}
record(stringin, "$(P)SD:Pck17-I") {}
record(stringin, "$(P)SD:Pck18-I") {}
record(stringin, "$(P)SD:Pck19-I") {}
record(stringin, "$(P)SD:Pck20-I") {}
record(stringin, "$(P)SD:Pck21-I") {}
record(stringin, "$(P)SD:Pck22-I") {}
record(stringin, "$(P)SD:Pck23-I") {}
record(stringin, "$(P)SD:Pck24-I") {}
record(stringin, "$(P)SD:Pck25-I") {}
record(stringin, "$(P)SD:Pck26-I") {}
record(stringin, "$(P)SD:Pck27-I") {}
record(stringin, "$(P)SD:Pck28-I") {}
record(stringin, "$(P)SD:Pck29-I") {}

# status scan status

record(ai, "$(P)Scn:End-I_") {
    field(DTYP, "Soft Timestamp") # OS time at end of scan
    field(FLNK, "$(P)Scn:Tm-I")
}

# measured time for all I/O
record(calc, "$(P)Scn:Tm-I") {
    field(DESC, "Time to SCAN")
    field(INPA, "$(P)Scn:Strt-I_")
    field(INPB, "$(P)Scn:End-I_")
    field(INPC, "1000")
    field(CALC, "(B-A)*C")
    field(EGU , "ms")
    field(PREC, "3")
    field(FLNK, "$(P)Scn:Cnt-I")
}

record(calc, "$(P)Scn:Cnt-I") {
    field(CALC, "(VAL+1)%0xffff")
}

# measured rate of status scan cycle counter
record(calc, "$(P)Scn:Rate-I") {
    field(DESC, "Effective SCAN rate")
    field(SCAN, "10 second")
    field(INPA, "$(P)Scn:Cnt-I")
    field(CALC, "C:=A-B;B:=A;C/10")
    field(EGU , "Hz")
    field(PREC, "1")
    field(HIGH, "11")   # faster than SCAN=".1 second"
    field(LOW , "0.05") # slower than SCAN="10 second"
    field(HSV , "MINOR")
    field(LSV , "MAJOR")
}
